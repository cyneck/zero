<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyneck.zero.entry.mapper.TenantConfigMapper">
    <resultMap id="BaseResultMap" type="com.cyneck.zero.entry.model.pojo.TenantConfig">
        <constructor>
            <idArg column="tenant_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="customize_reset_surplus" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="print_repair_receipt" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="initial_cyc_qty" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="time_split_enable" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="adjust_ladder" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="cumulant_report_type" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="cumulant_report_type_writable" javaType="java.lang.String" jdbcType="CHAR"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        tenant_id, customize_reset_surplus, print_repair_receipt, initial_cyc_qty, create_time,
        time_split_enable, adjust_ladder, cumulant_report_type, cumulant_report_type_writable
    </sql>
    <select id="selectByExample" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfigExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from tenant_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tenant_config
        where tenant_id = #{tenantId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from tenant_config
        where tenant_id = #{tenantId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfigExample">
        delete from tenant_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfig">
        insert into tenant_config (tenant_id, customize_reset_surplus, print_repair_receipt,
        initial_cyc_qty, create_time, time_split_enable,
        adjust_ladder, cumulant_report_type, cumulant_report_type_writable
        )
        values (#{tenantId,jdbcType=VARCHAR}, #{customizeResetSurplus,jdbcType=CHAR},
        #{printRepairReceipt,jdbcType=CHAR},
        #{initialCycQty,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{timeSplitEnable,jdbcType=CHAR},
        #{adjustLadder,jdbcType=CHAR}, #{cumulantReportType,jdbcType=CHAR}, #{cumulantReportTypeWritable,jdbcType=CHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfig">
        insert into tenant_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tenantId != null">
                tenant_id,
            </if>
            <if test="customizeResetSurplus != null">
                customize_reset_surplus,
            </if>
            <if test="printRepairReceipt != null">
                print_repair_receipt,
            </if>
            <if test="initialCycQty != null">
                initial_cyc_qty,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="timeSplitEnable != null">
                time_split_enable,
            </if>
            <if test="adjustLadder != null">
                adjust_ladder,
            </if>
            <if test="cumulantReportType != null">
                cumulant_report_type,
            </if>
            <if test="cumulantReportTypeWritable != null">
                cumulant_report_type_writable,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tenantId != null">
                #{tenantId,jdbcType=VARCHAR},
            </if>
            <if test="customizeResetSurplus != null">
                #{customizeResetSurplus,jdbcType=CHAR},
            </if>
            <if test="printRepairReceipt != null">
                #{printRepairReceipt,jdbcType=CHAR},
            </if>
            <if test="initialCycQty != null">
                #{initialCycQty,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeSplitEnable != null">
                #{timeSplitEnable,jdbcType=CHAR},
            </if>
            <if test="adjustLadder != null">
                #{adjustLadder,jdbcType=CHAR},
            </if>
            <if test="cumulantReportType != null">
                #{cumulantReportType,jdbcType=CHAR},
            </if>
            <if test="cumulantReportTypeWritable != null">
                #{cumulantReportTypeWritable,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByExampleSelective" parameterType="map">
        update tenant_config
        <set>
            <if test="record.tenantId != null">
                tenant_id = #{record.tenantId,jdbcType=VARCHAR},
            </if>
            <if test="record.customizeResetSurplus != null">
                customize_reset_surplus = #{record.customizeResetSurplus,jdbcType=CHAR},
            </if>
            <if test="record.printRepairReceipt != null">
                print_repair_receipt = #{record.printRepairReceipt,jdbcType=CHAR},
            </if>
            <if test="record.initialCycQty != null">
                initial_cyc_qty = #{record.initialCycQty,jdbcType=CHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.timeSplitEnable != null">
                time_split_enable = #{record.timeSplitEnable,jdbcType=CHAR},
            </if>
            <if test="record.adjustLadder != null">
                adjust_ladder = #{record.adjustLadder,jdbcType=CHAR},
            </if>
            <if test="record.cumulantReportType != null">
                cumulant_report_type = #{record.cumulantReportType,jdbcType=CHAR},
            </if>
            <if test="record.cumulantReportTypeWritable != null">
                cumulant_report_type_writable = #{record.cumulantReportTypeWritable,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tenant_config
        set tenant_id = #{record.tenantId,jdbcType=VARCHAR},
        customize_reset_surplus = #{record.customizeResetSurplus,jdbcType=CHAR},
        print_repair_receipt = #{record.printRepairReceipt,jdbcType=CHAR},
        initial_cyc_qty = #{record.initialCycQty,jdbcType=CHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        time_split_enable = #{record.timeSplitEnable,jdbcType=CHAR},
        adjust_ladder = #{record.adjustLadder,jdbcType=CHAR},
        cumulant_report_type = #{record.cumulantReportType,jdbcType=CHAR},
        cumulant_report_type_writable = #{record.cumulantReportTypeWritable,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfig">
        update tenant_config
        <set>
            <if test="customizeResetSurplus != null">
                customize_reset_surplus = #{customizeResetSurplus,jdbcType=CHAR},
            </if>
            <if test="printRepairReceipt != null">
                print_repair_receipt = #{printRepairReceipt,jdbcType=CHAR},
            </if>
            <if test="initialCycQty != null">
                initial_cyc_qty = #{initialCycQty,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="timeSplitEnable != null">
                time_split_enable = #{timeSplitEnable,jdbcType=CHAR},
            </if>
            <if test="adjustLadder != null">
                adjust_ladder = #{adjustLadder,jdbcType=CHAR},
            </if>
            <if test="cumulantReportType != null">
                cumulant_report_type = #{cumulantReportType,jdbcType=CHAR},
            </if>
            <if test="cumulantReportTypeWritable != null">
                cumulant_report_type_writable = #{cumulantReportTypeWritable,jdbcType=CHAR},
            </if>
        </set>
        where tenant_id = #{tenantId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cyneck.zero.entry.model.pojo.TenantConfig">
        update tenant_config
        set customize_reset_surplus = #{customizeResetSurplus,jdbcType=CHAR},
        print_repair_receipt = #{printRepairReceipt,jdbcType=CHAR},
        initial_cyc_qty = #{initialCycQty,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        time_split_enable = #{timeSplitEnable,jdbcType=CHAR},
        adjust_ladder = #{adjustLadder,jdbcType=CHAR},
        cumulant_report_type = #{cumulantReportType,jdbcType=CHAR},
        cumulant_report_type_writable = #{cumulantReportTypeWritable,jdbcType=CHAR}
        where tenant_id = #{tenantId,jdbcType=VARCHAR}
    </update>
</mapper>